// @strict-types

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	// Заполнение дней недели
	ЗаполнитьДниНедели();
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ДобавитьУченикаИСформироватьРасписание(Команда)
	ПараметрыЗакрытия = ДобавитьУченикаИСформироватьРасписаниеНаСервере();
	Закрыть(ПараметрыЗакрытия);
КонецПроцедуры

&НаСервере
Функция ДобавитьУченикаИСформироватьРасписаниеНаСервере()
	// Добавить ученика
	Родитель = Константы.ДБ_ГруппаКонтактов.Получить();
	УченикОбъект = Справочники.Контакты.СоздатьЭлемент();
	УченикОбъект.Наименование = Наименование;
	УченикОбъект.Родитель = Родитель;
	УченикОбъект.Активность = Истина;
	УченикОбъект.Записать();
	Ученик = УченикОбъект.Ссылка;
	
	// Добавление уровня владения языков
	ЗаписьУровеньВладения = РегистрыСведений.ДБ_УровниВладенияЯзыкомУчеников.СоздатьМенеджерЗаписи();
	ЗаписьУровеньВладения.Период = ТекущаяДатаСеанса();
	ЗаписьУровеньВладения.УченикГруппа = Ученик;
	ЗаписьУровеньВладения.УровеньВладенияЯзыком = УровеньВладения;
	ЗаписьУровеньВладения.Записать();
	
	// Добавление цены занятия
	ЗаписьЦенаЗанятия = РегистрыСведений.ДБ_ЦеныЗанятий.СоздатьМенеджерЗаписи();
	ЗаписьЦенаЗанятия.Период = ТекущаяДатаСеанса();
	ЗаписьЦенаЗанятия.УченикГруппа = Ученик;
	ЗаписьЦенаЗанятия.Цена = ЦенаЗанятия;
	ЗаписьЦенаЗанятия.Записать();

	// Создание предварительного расписания
	СформироватьРасписание(Ученик);
	ДБ_РаботаСКалендарем.СинхронизироватьРасписаниеСКалендарем();
	
	ПараметрыЗаписи = Новый Структура();
	ПараметрыЗаписи.Вставить("Ученик", Ученик);
	ПараметрыЗаписи.Вставить("ОбновитьРасписание", Истина);
	
	Возврат ПараметрыЗаписи;
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ЗаполнитьДниНедели()
	НоваяЗапись = СписокДней.Добавить();
	НоваяЗапись.Значение = 1;
	НоваяЗапись.Представление = "Понедельник";
	НоваяЗапись = СписокДней.Добавить();
	НоваяЗапись.Значение = 2;
	НоваяЗапись.Представление = "Вторник";
	НоваяЗапись = СписокДней.Добавить();
	НоваяЗапись.Значение = 3;
	НоваяЗапись.Представление = "Среда";
	НоваяЗапись = СписокДней.Добавить();
	НоваяЗапись.Значение = 4;
	НоваяЗапись.Представление = "Четверг";
	НоваяЗапись = СписокДней.Добавить();
	НоваяЗапись.Значение = 5;
	НоваяЗапись.Представление = "Пятница";
	НоваяЗапись = СписокДней.Добавить();
	НоваяЗапись.Значение = 6;
	НоваяЗапись.Представление = "Суббота";
	НоваяЗапись = СписокДней.Добавить();
	НоваяЗапись.Значение = 7;
	НоваяЗапись.Представление = "Воскресенье";
КонецПроцедуры

&НаСервере
Процедура СформироватьРасписание(Ученик)
	ТекДата = НачалоДня(ТекущаяДатаСеанса());
	Сутки = 86400; 
	КоличествоДнейПланирования = 2592000;	// 30 * Сутки 
	ДатаНачалаЗанятий = Макс(ПериодПроведенияЗанятий.ДатаНачала, ТекДата);
	ДатаОкончанияЗанятий = ПериодПроведенияЗанятий.ДатаОкончания;
	Если НЕ ЗначениеЗаполнено(ДатаОкончанияЗанятий) Тогда
		// Дата окончания не известна, расписание составляем на месяц
		ДатаОкончанияЗанятий = КонецДня(ТекДата + КоличествоДнейПланирования);
	КонецЕсли;
	
	ДатаЗанятия = ДатаНачалаЗанятий;
	Пока ДатаЗанятия < ДатаОкончанияЗанятий Цикл
		ДеньНеделиКалендарь = ДеньНедели(ДатаЗанятия);
		Для Каждого ДеньНедели Из СписокДней Цикл
			Если ДеньНедели.Пометка И ДеньНедели.Значение = ДеньНеделиКалендарь Тогда
				ДобавитьЗаписьПланирования(Ученик, НачалоДня(ДатаЗанятия));
			КонецЕсли;
		КонецЦикла;
		ДатаЗанятия = ДатаЗанятия + Сутки; 
	КонецЦикла;
КонецПроцедуры

&НаСервере
Процедура ДобавитьЗаписьПланирования(Ученик, ДатаЗанятия)
	ЗаписьПланЗанятий = РегистрыСведений.ДБ_ПланыЗанятий.СоздатьМенеджерЗаписи();
	ЗаписьПланЗанятий.Период = ТекущаяДатаСеанса();
	ЗаписьПланЗанятий.УченикГруппа = Ученик;
	ЗаписьПланЗанятий.ДатаЗанятия = ДатаЗанятия;
	ЗаписьПланЗанятий.КоличествоЧасов = КоличествоЧасов;
	ЗаписьПланЗанятий.ВремяПроведения = ДБ_РаботаСКалендарем.ПреобразоватьАкадемическиеЧасыВАстрономические(КоличествоЧасов);
	ЗаписьПланЗанятий.ДатаНачала = ДатаЗанятия + (ВремяНачалаЗанятия - Дата(1, 1, 1));
	ЗаписьПланЗанятий.ДатаОкончания = ЗаписьПланЗанятий.ДатаНачала + (ЗаписьПланЗанятий.ВремяПроведения - Дата(1, 1, 1));
	ЗаписьПланЗанятий.Записать();
КонецПроцедуры

#КонецОбласти
